Контрольные вопросы. Web:

Git:

1. Что такое индекс?
	Индекс — промежуточное место между вашим прошлым коммитом и следующим.
	Вы можете добавлять или удалять файлы из индекса. 
	Когда вы делаете коммит в него попадают данные из индекса, а не из рабочей области.

2. Как добавить изменения в индекс? 
	(git add .)

3. Как сделать фиксацию изменений? 
	(git commit -m "text")

4. Как сделать синхронизацию изменений с удаленным репозиторием? 
	(git push origin master)

5. Как синхронизироваться с удаленным репозиторием? 

	(git pull origin master) - загрузить данные с репозитория

6. Как сделать ветку?
	git branch [name_branch]

7. Как переключиться между ветками?
	git checkout [name_branch]

8. Как отменить локальные изменения?

	git reset --soft rev
	git push origin +master

9. Расскажи о команде git reset?
   Откат изменений

10. Расскажите о команде git stash
    Временное хранение. 

11. Расскажите о команде git cherry-pick

    переносит коммит из 1 ветки в другую

12. Расскажите, о команде git rerere. Расскажите, как разрешаются конфликты.

   Механизм rerere способен запомнить каким образом вы разрешали некую часть конфликта в прошлом 
   и провести автоматическое исправление конфликта при возникновении его в следующий раз.

Http протокол:

1. Расскажите, чем отличается UDP от TCP/IP.
udp не контролирует доставку пакета, просто отправляет данные. 
TCP/IP контролирует доставку

2. Расскажите о методах HTTP протокола. Подробно рассказать отличие в заголовке и теле запросов: GET, POST, PUT, DELETE.

    2.2.2. Socket 1. Протокол HTTP

    Типы HTTP-запросов и философия REST (Раздел "Ресурсы и методы")

3. Расскажите о статусах HTTP протокола.

    2.2.2. Socket 1. Протокол HTTP

    Список кодов состояния HTTP

4. Расскажите о mime-type HTTP протокола.

    Список MIME-типов



Веб-контейнер:

1. Что такое сервлет?

    3.2.3. Контроллеры. Spring + Thymeleaf 1. Что такое Servlet.
    
    Сервлет (Java) Wiki

    Документация Servlet

2. Какова структура веб-проекта?
    
    Introduction to the Standard Directory Layout

3. Что такое контейнер сервлетов?
    
    3.2.3. Контроллеры. Spring + Thymeleaf 3. Дополнительные знания по сервлетам

    Контейнер сервлетов Wiki

4. Каковы задачи, функциональность контейнера сервлетов?
    
    3.2.3. Контроллеры. Spring + Thymeleaf 3. Дополнительные знания по сервлетам

    Контейнер сервлетов Wiki

5. Что вы знаете о сервлет фильтрах?

    3.2.3. Контроллеры. Spring + Thymeleaf 3. Дополнительные знания по сервлетам

    Использование фильтра сервлетов для «всплытия» страницы из фрейма

    The Essentials of Filters

6. Зачем нужны слушатели в сервлетах?

    3.2.3. Контроллеры. Spring + Thymeleaf 3. Дополнительные знания по сервлетам

7. Когда вы будете использовать фильтры, а когда слушатели?

    3.2.3. Контроллеры. Spring + Thymeleaf 3. Дополнительные знания по сервлетам

8. Как обработать исключения, выброшенные другим сервлетом в приложении?

    3.2.3. Контроллеры. Spring + Thymeleaf 3. Дополнительные знания по сервлетам

9. Что такое дескриптор развертывания?
    
    3.2.3. Контроллеры. Spring + Thymeleaf 2. DispatcherServlet. Web.xml

    Дескриптор развёртывания Wiki

10. Как реализовать запуск сервлета с запуском приложения?

    3.2.3. Контроллеры. Spring + Thymeleaf 2. DispatcherServlet. Web.xml

    3.2.3. Контроллеры. Spring + Thymeleaf 3. Дополнительные знания по сервлетам

11. Что представляет собой объект ServletConfig?

    3.2.3. Контроллеры. Spring + Thymeleaf 3. Дополнительные знания по сервлетам

12. Что представляет собой объект ServletContext?

    3.2.3. Контроллеры. Spring + Thymeleaf 3. Дополнительные знания по сервлетам

13. В чем отличия ServletContext и ServletConfig?

    3.2.3. Контроллеры. Spring + Thymeleaf 3. Дополнительные знания по сервлетам

14. Что такое Request Dispatcher?
    
    3.2.3. Контроллеры. Spring + Thymeleaf 3. Дополнительные знания по сервлетам



Thymeleaf:

1. Расскажите о назначении Thymeleaf?

    3.2.2. Html, Bootstrap, Thymeleaf 6. Введение в Thymeleaf

    3.2.2. Html, Bootstrap, Thymeleaf 4. Thymeleaf, Циклы.

    Учебник Thymeleaf: Глава 1. Знакомство

2. Расскажите про тег th:text.

    3.2.2. Html, Bootstrap, Thymeleaf 6. Введение в Thymeleaf

    3.2.2. Html, Bootstrap, Thymeleaf 4. Thymeleaf, Циклы.

    Учебник Thymeleaf: Глава 3. Использование Text

3. Расскажите про тег th:if.

    3.2.2. Html, Bootstrap, Thymeleaf 6. Введение в Thymeleaf

    3.2.5. Формы 1. Формы. Поля ввода.

    Учебник Thymeleaf: Глава 7. Условное выполнение

4. Расскажите про тег th:href.

    3.2.2. Html, Bootstrap, Thymeleaf 6. Введение в Thymeleaf

    3.2.3. Контроллеры. Spring + Thymeleaf 4. PostController.updatePost. Редактирование вакансии.

    Учебник Thymeleaf: Глава 4. Standard Expression Syntax (Раздел "4.4. Link URL")

5. Расскажите про тег th:each.

    3.2.2. Html, Bootstrap, Thymeleaf 6. Введение в Thymeleaf

    3.2.2. Html, Bootstrap, Thymeleaf 4. Thymeleaf, Циклы.

    Учебник Thymeleaf: Глава 6.Итерации

6. Расскажите про тег th:object.

    3.2.2. Html, Bootstrap, Thymeleaf 6. Введение в Thymeleaf

    Руководство: Thymeleaf + Spring. Часть 2 (Раздел "6.1 Обработка командного объекта")

7. Расскажите про тег th:action.

    3.2.2. Html, Bootstrap, Thymeleaf 6. Введение в Thymeleaf

    Учебник Thymeleaf: Глава 5 Установка значений атрибутов (Раздел "5.2. Установка значения для определенных атрибутов")


Spring boot:

1. Опишите из каких компонентов состоит Spring boot?

    3.2.1.1. Hello world для Web 1. Что такое клиент - серверное приложение.
    
    Введение в Spring Boot: создание простого REST API на Java

2. Что такое контроллер и как он связан с DispatcherServlet.

        3.2.2. Html, Bootstrap, Thymeleaf 4. Thymeleaf, Циклы.

        3.2.3. Контроллеры. Spring + Thymeleaf 2. DispatcherServlet. Web.xml

        Spring MVC — основные принципы (Раздел "DispatcherServlet")

3. Что такое стереотипные аннотации? Какие они бывают?

    3.2.4. Архитектура Web приложений 2. Связь слоев через Spring DI.

    Подготовка к Spring Professional Certification. Контейнер, IoC, бины (Вопрос "Что такое stereotypes")

4. Что такое DI? Как он реализован в Spring?

    3.2.4. Архитектура Web приложений 2. Связь слоев через Spring DI.

    Обратная сторона Spring

5. Опишите аннотации @ModelAttribute, @PathVariable, @RequestParam

    3.2.3. Контроллеры. Spring + Thymeleaf 3. PostController.createPost. Создание вакансии. (@ModelAttribute)

    3.2.3. Контроллеры. Spring + Thymeleaf 4. PostController.updatePost. Редактирование вакансии. (@PathVariable)

    Spring MVC: создание веб-сайтов и RESTful сервисов (Разделы "@PathVariable" и "@RequestParam")


6. Опишите аннотации @GetMapping, @PostMapping.

    3.2.3. Контроллеры. Spring + Thymeleaf 2. DispatcherServlet. Web.xml

    3.2.2. Html, Bootstrap, Thymeleaf 7. HTML form. Создание вакансии.

    Spring MVC: создание веб-сайтов и RESTful сервисов (Разделы "@GetMapping" и "Как вы можете управлять загрузкой файлов")

    Подготовка к Spring Professional Certification. Spring REST (Вопрос "Что за аннотации @GetMapping, @PostMapping")
    

Многопоточность:

1. Объясните, где в веб приложении появляется многопоточность?

    3.2.6. DabaBase в Web 4. Многопоточность в базе данных

    Конкуренция в сервлетах (Раздел "Обзор")

2. Как избежать проблем в многопоточности?

    3.2.6. DabaBase в Web 4. Многопоточность в базе данных

3. Как можно создать блокировку (deadlock) в сервлете?

4. Как решать проблемы многопоточности на уровне базы данных?

    3.2.6. DabaBase в Web 4. Многопоточность в базе данных



Архитектура:

1. Объясните слоеную архитектуру.

    3.2.4. Архитектура Web приложений 1. Слоеная архитектура.

2. Объясните шаблон MVC на примере Servlet.

3. Объясните шаблон MVC на примере Spring boot.

    3.2.4. Архитектура Web приложений 3. MVC.

    3.2.2. Html, Bootstrap, Thymeleaf 4. Thymeleaf, Циклы.

    Spring MVC — основные принципы


База данных.

1. Зачем нужен пул соединений?

    3.2.6. DabaBase в Web 1. Подключение к базе в веб приложении. Хранение вакансий.

    Пулы соединений к БД — зачем и почему


Безопасность.

1. Что такое HttpSession?

    3.2.7. Авторизация и аутентификация 2. HttpSession

    Spring MVC: создание веб-сайтов и RESTful сервисов (Раздел "Как получить доступ к текущей HttpSession пользователя")

    Документация HttpSession

2. Что такое авторизация?
    
    3.2.7. Авторизация и аутентификация 1. Страница login.html

    Авторизация Wiki

3. Что такое аутентификация?

    Аутентификация Wiki

4. Что такое cookie?

    «Осторожно, печеньки!»: советы начинающим тестировщикам в сфере безопасности (Раздел "Что хранят cookie")

    Cookie Wiki